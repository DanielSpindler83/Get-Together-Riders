// <auto-generated />
using System;
using Get_Together_Riders.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Get_Together_Riders.Migrations
{
    [DbContext(typeof(GTRDbContext))]
    partial class GTRDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Get_Together_Riders.Models.RideEvent", b =>
                {
                    b.Property<int>("RideEventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RideEventID"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventCategory")
                        .HasColumnType("int");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RideEventID");

                    b.ToTable("RideEvents");
                });

            modelBuilder.Entity("Get_Together_Riders.Models.RideEventEnrollment", b =>
                {
                    b.Property<int>("RideEventEnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RideEventEnrollmentID"), 1L, 1);

                    b.Property<int>("RideEventID")
                        .HasColumnType("int");

                    b.Property<int>("RiderID")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("RideEventEnrollmentID");

                    b.HasIndex("RideEventID");

                    b.HasIndex("RiderID");

                    b.ToTable("RideEventEnrollments");
                });

            modelBuilder.Entity("Get_Together_Riders.Models.Rider", b =>
                {
                    b.Property<int>("RiderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RiderID"), 1L, 1);

                    b.Property<string>("BikeModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GTRNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RiderID");

                    b.ToTable("Riders");
                });

            modelBuilder.Entity("Get_Together_Riders.Models.RideEventEnrollment", b =>
                {
                    b.HasOne("Get_Together_Riders.Models.RideEvent", "RideEvent")
                        .WithMany("RideEventEnrollments")
                        .HasForeignKey("RideEventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Get_Together_Riders.Models.Rider", "Rider")
                        .WithMany("RideEventEnrollments")
                        .HasForeignKey("RiderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RideEvent");

                    b.Navigation("Rider");
                });

            modelBuilder.Entity("Get_Together_Riders.Models.RideEvent", b =>
                {
                    b.Navigation("RideEventEnrollments");
                });

            modelBuilder.Entity("Get_Together_Riders.Models.Rider", b =>
                {
                    b.Navigation("RideEventEnrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
